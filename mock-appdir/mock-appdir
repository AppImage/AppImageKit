#!/bin/bash

# A version of "apt-appdir" that uses RPM, yum, and mock.
# Intended to be ran on a Fedora system, or recent CentOS/RHEL.
# Defaults to Fedora 20 chroot at the moment.

# /**************************************************************************
# 
# Copyright (c) 2015 Ben Rosser
# 
# All Rights Reserved.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 
# **************************************************************************/

# This should be overridable somehow.
# F20 is old, no longer supported, but was for 1 year.
# So this is probably a sane default.
# (CentOS 7 would be better).
if [ -z "${MOCK_TARGET}" ]
then
	MOCK_TARGET="fedora-20-x86_64"
fi

DIRNAME=$(dirname $(readlink -f "${0}"))

APP="${1}"
APPDIR="./${APP}.AppDir"

set -e

rm -rf  "${APPDIR}"

# Use mock to download package + all basic dependencies.
echo "Downloading packages into mock chroot for " ${MOCK_TARGET}
mock -r ${MOCK_TARGET} --scrub=all
mock -r ${MOCK_TARGET} --install @base-x --install kmod --install systemd
mock -r ${MOCK_TARGET} --scrub=cache
mock -r ${MOCK_TARGET} --install ${APP}

mkdir "${APPDIR}"
cd "${APPDIR}"
cp -v /var/cache/mock/${MOCK_TARGET}/yum_cache/*/packages/*.rpm ./

# Use rpm2cpio (...) to unbundle the rpms and then remove them.
for f in *
do
	rpm2cpio $f | cpio -idm
done
rm -v *.rpm

# Now do these other steps.
find . -type f -exec sed -i -e 's|/usr|././|g' {} \;
find . -type f -exec sed -i -e 's|././/bin/env|/usr/bin/env|g' {} \;
find . -type f -exec sed -i -e 's|././/bin/python|/usr/bin/python|g' {} \;
### TODO: need proper IntelliPatch here ###

cp "${DIRNAME}/../AppRun" .

find ./usr/share/py* > /dev/null 2>&1 && echo "Python code has been detected." && \
echo "Probably you want to insert portability.py into the Python code to" && \
echo "solve import errors."

# Copy all desktop files to the topmost AppDir level
# if it's more than one, then the user needs to delete all but one
# or the result will be undefined
find . -iname *.desktop -exec cp {} . \;

# This, together with the environment variable set by AppRun, allows Vala apps to run
if [ -d ./usr/share/glib-2.0/schemas ]
then
	glib-compile-schemas ./usr/share/glib-2.0/schemas/
else
	echo "No ./usr/share/glib-2.0/schemas/"
fi

cd -

echo ""
echo "./${APP}.AppDir created. Now run:"
echo "./AppImageAssistant ./${APP}.AppDir ./${APP}"
echo ""
